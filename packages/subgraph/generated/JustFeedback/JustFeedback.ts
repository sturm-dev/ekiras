// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class AddTransactionIdEvent extends ethereum.Event {
  get params(): AddTransactionIdEvent__Params {
    return new AddTransactionIdEvent__Params(this);
  }
}

export class AddTransactionIdEvent__Params {
  _event: AddTransactionIdEvent;

  constructor(event: AddTransactionIdEvent) {
    this._event = event;
  }

  get _transactionId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class CreatePostEvent extends ethereum.Event {
  get params(): CreatePostEvent__Params {
    return new CreatePostEvent__Params(this);
  }
}

export class CreatePostEvent__Params {
  _event: CreatePostEvent;

  constructor(event: CreatePostEvent) {
    this._event = event;
  }

  get _id(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get _createdDate(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get _author(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get _text(): string {
    return this._event.parameters[3].value.toString();
  }

  get _upVotesCount(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }

  get _downVotesCount(): BigInt {
    return this._event.parameters[5].value.toBigInt();
  }
}

export class DeletePostEvent extends ethereum.Event {
  get params(): DeletePostEvent__Params {
    return new DeletePostEvent__Params(this);
  }
}

export class DeletePostEvent__Params {
  _event: DeletePostEvent;

  constructor(event: DeletePostEvent) {
    this._event = event;
  }

  get _id(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class UpdateUsernameEvent extends ethereum.Event {
  get params(): UpdateUsernameEvent__Params {
    return new UpdateUsernameEvent__Params(this);
  }
}

export class UpdateUsernameEvent__Params {
  _event: UpdateUsernameEvent;

  constructor(event: UpdateUsernameEvent) {
    this._event = event;
  }

  get _userAddress(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get _text(): string {
    return this._event.parameters[1].value.toString();
  }
}

export class VoteEvent extends ethereum.Event {
  get params(): VoteEvent__Params {
    return new VoteEvent__Params(this);
  }
}

export class VoteEvent__Params {
  _event: VoteEvent;

  constructor(event: VoteEvent) {
    this._event = event;
  }

  get _postId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get _upVotesCount(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get _downVotesCount(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class JustFeedback__postsResult {
  value0: BigInt;
  value1: BigInt;
  value2: Address;
  value3: string;
  value4: BigInt;
  value5: BigInt;

  constructor(
    value0: BigInt,
    value1: BigInt,
    value2: Address,
    value3: string,
    value4: BigInt,
    value5: BigInt
  ) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
    this.value4 = value4;
    this.value5 = value5;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromUnsignedBigInt(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    map.set("value2", ethereum.Value.fromAddress(this.value2));
    map.set("value3", ethereum.Value.fromString(this.value3));
    map.set("value4", ethereum.Value.fromUnsignedBigInt(this.value4));
    map.set("value5", ethereum.Value.fromUnsignedBigInt(this.value5));
    return map;
  }

  getId(): BigInt {
    return this.value0;
  }

  getCreatedDate(): BigInt {
    return this.value1;
  }

  getAuthor(): Address {
    return this.value2;
  }

  getText(): string {
    return this.value3;
  }

  getUpVotesCount(): BigInt {
    return this.value4;
  }

  getDownVotesCount(): BigInt {
    return this.value5;
  }
}

export class JustFeedback extends ethereum.SmartContract {
  static bind(address: Address): JustFeedback {
    return new JustFeedback("JustFeedback", address);
  }

  addressToPostIds(param0: Address, param1: BigInt): BigInt {
    let result = super.call(
      "addressToPostIds",
      "addressToPostIds(address,uint256):(uint256)",
      [
        ethereum.Value.fromAddress(param0),
        ethereum.Value.fromUnsignedBigInt(param1)
      ]
    );

    return result[0].toBigInt();
  }

  try_addressToPostIds(
    param0: Address,
    param1: BigInt
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "addressToPostIds",
      "addressToPostIds(address,uint256):(uint256)",
      [
        ethereum.Value.fromAddress(param0),
        ethereum.Value.fromUnsignedBigInt(param1)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  addressToUsername(param0: Address): string {
    let result = super.call(
      "addressToUsername",
      "addressToUsername(address):(string)",
      [ethereum.Value.fromAddress(param0)]
    );

    return result[0].toString();
  }

  try_addressToUsername(param0: Address): ethereum.CallResult<string> {
    let result = super.tryCall(
      "addressToUsername",
      "addressToUsername(address):(string)",
      [ethereum.Value.fromAddress(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }

  manager(): Address {
    let result = super.call("manager", "manager():(address)", []);

    return result[0].toAddress();
  }

  try_manager(): ethereum.CallResult<Address> {
    let result = super.tryCall("manager", "manager():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  postIndex(): BigInt {
    let result = super.call("postIndex", "postIndex():(uint256)", []);

    return result[0].toBigInt();
  }

  try_postIndex(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("postIndex", "postIndex():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  posts(param0: BigInt): JustFeedback__postsResult {
    let result = super.call(
      "posts",
      "posts(uint256):(uint256,uint256,address,string,uint256,uint256)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );

    return new JustFeedback__postsResult(
      result[0].toBigInt(),
      result[1].toBigInt(),
      result[2].toAddress(),
      result[3].toString(),
      result[4].toBigInt(),
      result[5].toBigInt()
    );
  }

  try_posts(param0: BigInt): ethereum.CallResult<JustFeedback__postsResult> {
    let result = super.tryCall(
      "posts",
      "posts(uint256):(uint256,uint256,address,string,uint256,uint256)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new JustFeedback__postsResult(
        value[0].toBigInt(),
        value[1].toBigInt(),
        value[2].toAddress(),
        value[3].toString(),
        value[4].toBigInt(),
        value[5].toBigInt()
      )
    );
  }

  transactionIds(param0: BigInt): boolean {
    let result = super.call(
      "transactionIds",
      "transactionIds(uint256):(bool)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );

    return result[0].toBoolean();
  }

  try_transactionIds(param0: BigInt): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "transactionIds",
      "transactionIds(uint256):(bool)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  usernameToAddress(param0: string): Address {
    let result = super.call(
      "usernameToAddress",
      "usernameToAddress(string):(address)",
      [ethereum.Value.fromString(param0)]
    );

    return result[0].toAddress();
  }

  try_usernameToAddress(param0: string): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "usernameToAddress",
      "usernameToAddress(string):(address)",
      [ethereum.Value.fromString(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  votesDown(param0: BigInt, param1: Address): boolean {
    let result = super.call("votesDown", "votesDown(uint256,address):(bool)", [
      ethereum.Value.fromUnsignedBigInt(param0),
      ethereum.Value.fromAddress(param1)
    ]);

    return result[0].toBoolean();
  }

  try_votesDown(param0: BigInt, param1: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "votesDown",
      "votesDown(uint256,address):(bool)",
      [
        ethereum.Value.fromUnsignedBigInt(param0),
        ethereum.Value.fromAddress(param1)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  votesUp(param0: BigInt, param1: Address): boolean {
    let result = super.call("votesUp", "votesUp(uint256,address):(bool)", [
      ethereum.Value.fromUnsignedBigInt(param0),
      ethereum.Value.fromAddress(param1)
    ]);

    return result[0].toBoolean();
  }

  try_votesUp(param0: BigInt, param1: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall("votesUp", "votesUp(uint256,address):(bool)", [
      ethereum.Value.fromUnsignedBigInt(param0),
      ethereum.Value.fromAddress(param1)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class AddTransactionIdCall extends ethereum.Call {
  get inputs(): AddTransactionIdCall__Inputs {
    return new AddTransactionIdCall__Inputs(this);
  }

  get outputs(): AddTransactionIdCall__Outputs {
    return new AddTransactionIdCall__Outputs(this);
  }
}

export class AddTransactionIdCall__Inputs {
  _call: AddTransactionIdCall;

  constructor(call: AddTransactionIdCall) {
    this._call = call;
  }

  get _transactionId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class AddTransactionIdCall__Outputs {
  _call: AddTransactionIdCall;

  constructor(call: AddTransactionIdCall) {
    this._call = call;
  }
}

export class CreatePostCall extends ethereum.Call {
  get inputs(): CreatePostCall__Inputs {
    return new CreatePostCall__Inputs(this);
  }

  get outputs(): CreatePostCall__Outputs {
    return new CreatePostCall__Outputs(this);
  }
}

export class CreatePostCall__Inputs {
  _call: CreatePostCall;

  constructor(call: CreatePostCall) {
    this._call = call;
  }

  get _text(): string {
    return this._call.inputValues[0].value.toString();
  }
}

export class CreatePostCall__Outputs {
  _call: CreatePostCall;

  constructor(call: CreatePostCall) {
    this._call = call;
  }
}

export class DeleteOwnPostCall extends ethereum.Call {
  get inputs(): DeleteOwnPostCall__Inputs {
    return new DeleteOwnPostCall__Inputs(this);
  }

  get outputs(): DeleteOwnPostCall__Outputs {
    return new DeleteOwnPostCall__Outputs(this);
  }
}

export class DeleteOwnPostCall__Inputs {
  _call: DeleteOwnPostCall;

  constructor(call: DeleteOwnPostCall) {
    this._call = call;
  }

  get _postId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class DeleteOwnPostCall__Outputs {
  _call: DeleteOwnPostCall;

  constructor(call: DeleteOwnPostCall) {
    this._call = call;
  }
}

export class UpdateMyUsernameCall extends ethereum.Call {
  get inputs(): UpdateMyUsernameCall__Inputs {
    return new UpdateMyUsernameCall__Inputs(this);
  }

  get outputs(): UpdateMyUsernameCall__Outputs {
    return new UpdateMyUsernameCall__Outputs(this);
  }
}

export class UpdateMyUsernameCall__Inputs {
  _call: UpdateMyUsernameCall;

  constructor(call: UpdateMyUsernameCall) {
    this._call = call;
  }

  get _text(): string {
    return this._call.inputValues[0].value.toString();
  }
}

export class UpdateMyUsernameCall__Outputs {
  _call: UpdateMyUsernameCall;

  constructor(call: UpdateMyUsernameCall) {
    this._call = call;
  }
}

export class VotePostCall extends ethereum.Call {
  get inputs(): VotePostCall__Inputs {
    return new VotePostCall__Inputs(this);
  }

  get outputs(): VotePostCall__Outputs {
    return new VotePostCall__Outputs(this);
  }
}

export class VotePostCall__Inputs {
  _call: VotePostCall;

  constructor(call: VotePostCall) {
    this._call = call;
  }

  get _postId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _voteIsTypeUp(): boolean {
    return this._call.inputValues[1].value.toBoolean();
  }
}

export class VotePostCall__Outputs {
  _call: VotePostCall;

  constructor(call: VotePostCall) {
    this._call = call;
  }
}
